#!/bin/bash
# ------------------------------------------------------------------------------
# registry_xfer.sh
#
# if you run a local registry,
# there may be times you need to move your cached images to another local machine
# maybe you are upgrading something else
# so you have a machine in the middle
# pulling from the source and pushing to the destination
#
# this script will generate a script of all the 
# 'nerdctl pull/tag/push/rm' commands you would need to run 
# given a host/port for running source/destination registries 
#
# e.g. a series of commands for each version of each package
#  sudo nerdctl pull <source tag>
#  sudo nerdctl tag <source tag> <dest tag>
#  sudo nerdctl push <dest tag>
#  sudo nerdctl image rm <dest tag>
#
#
# assumed here you are running a simple HTTP config
# ------------------------------------------------------------------------------
function fail
{
   echo "ERROR: $1" >&2
   exit 1
}
# ------------------------------------------------------------------------------
function generate_xfer_commands
{
  local RX_HOST_SRC="${1}"
  local RX_PORT_SRC="${2}"
  local RX_HOST_DEST="${3}"
  local RX_PORT_DEST="${4}"

  local RX_URL_CATALOG_FETCH="http://${RX_HOST_SRC}:${RX_PORT_SRC}/v2/_catalog"

  if curl -s --head  --request GET ${RX_URL_CATALOG_FETCH} | grep "404 Not Found" > /dev/null
  then
    fail "404 NOT FOUND returned for url: ${RX_URL_CATALOG_FETCH}"
  fi

  mapfile -t RX_LIST_PACKAGES < <( curl -sS -X GET ${RX_URL_CATALOG_FETCH} | jq '.repositories|.[]' | sed -e 's/\"//g' )

  echo "#!/bin/bash"
  echo "# auto-generated by registry_xfer.sh"
  echo "# inspect out put before running"
  echo "# -------------------------------"

  for RX_CURR_PKG in "${RX_LIST_PACKAGES[@]}"; do
    local RX_URL_VERSIONS_FETCH="http://${RX_HOST_SRC}:${RX_PORT_SRC}/v2/${RX_CURR_PKG}/tags/list"
    mapfile -t RX_PKG_VERSIONS < <( curl -sS -X GET ${RX_URL_VERSIONS_FETCH} | jq '.tags|.[]' | sed -e 's/\"//g' )

    for RX_VERSION_CURRENT in "${RX_PKG_VERSIONS[@]}"; do
      RX_OLD_TAG="${RX_HOST_SRC}:${RX_PORT_SRC}/${RX_CURR_PKG}:${RX_VERSION_CURRENT}"
      RX_NEW_TAG="${RX_HOST_DEST}:${RX_PORT_DEST}/${RX_CURR_PKG}:${RX_VERSION_CURRENT}"
      RX_NEW_CMD0="sudo nerdctl pull ${RX_OLD_TAG}"
      RX_NEW_CMD1="sudo nerdctl tag ${RX_OLD_TAG} ${RX_NEW_TAG}"
      RX_NEW_CMD2="sudo nerdctl push ${RX_NEW_TAG}"
      RX_NEW_CMD3="sudo nerdctl image rm ${RX_NEW_TAG}"
      echo "${RX_NEW_CMD0}"
      echo "${RX_NEW_CMD1}"
      echo "${RX_NEW_CMD2}"
      echo "${RX_NEW_CMD3}"
      echo ""
    done

  done

  echo "# -------------------------------"
}
# ------------------------------------------------------------------------------
function display_usage_message
{
  echo
  echo "Usage: registry_xfer.sh <source FQDN> <source port> <dest FQDN> <dest port>"
  echo
}
# ------------------------------------------------------------------------------
# main() 

if [ "$#" -lt 4 ]; then
  display_usage_message
else
  generate_xfer_commands "${1}" "${2}" "${3}" "${4}"
fi

# fini
#
# =============================================================================================
